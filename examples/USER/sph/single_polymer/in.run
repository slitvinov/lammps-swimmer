echo               both

include            in.vars
dimension          ${ndim}
units              si
atom_modify        map array sort 0 0
atom_style         hybrid meso bond
comm_modify        vel yes
log                ${dname}/lammps.log

read_data          data.polymer
variable        Natoms equal count(all)
if ${ndim}==2 then "variable domain_volume equal ${Lx}*${Ly}" else "variable domain_volume equal ${Lx}*${Ly}*${Lz}"

variable       sph_mass             equal ${sph_rho}*${domain_volume}/${Natoms}

include        in.polymers

mass           ${atom_type_solvent} ${sph_mass}
mass           ${atom_type_polymer} ${sph_mass}

# do full time integration
fix                integrate_fix_full all  meso

neighbor           0 bin
neigh_modify       delay 0 every 1


compute            rho_peratom all meso_rho/atom
include            settimestep.lmp
variable            dt      equal  ${dt}/${saver_freq}

compute             ktemp all temp
variable            reftemp equal c_ktemp/${sph_temperature}

variable            physical_time equal ${dt}*step
compute             rho_max all reduce max c_rho_peratom
compute             rho_min all reduce min c_rho_peratom

group               gpolymer    type ${atom_type_polymer}
group               gsolvetn    subtract all gpolymer
compute             rg          gpolymer gyration

fix                fprint_polymer all print ${printer_freq} "${physical_time} $(c_rg)" &
		   screen no file ${dname}/polymer.dat

fix                fprint_moments all print ${printer_freq} &
                   "${physical_time} $(vcm(all,x)) $(vcm(all,y)) $(vcm(all,z))  &
		    $(vcm(gpolymer,x)) $(vcm(gpolymer,y)) $(vcm(gpolymer,z))"   &
		   screen no file ${dname}/moments.dat

thermo_style       custom step v_reftemp c_rho_min c_rho_max
thermo             ${printer_freq}

include            in.pairs
timestep           ${dt}

##################### pre-run
run                ${prerun_nstep}

##################### production run
include            in.dump
run                ${nstep}
