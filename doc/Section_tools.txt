"Previous Section"_Section_perf.html - "LAMMPS WWW Site"_lws - "LAMMPS
Documentation"_ld - "LAMMPS Commands"_lc - "Next
Section"_Section_modify.html :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

7. Additional tools :h3

LAMMPS is designed to be a computational kernel for performing
molecular dynamics computations.  Additional pre- and post-processing
steps are often necessary to setup and analyze a simulation.  A few
additional tools are provided with the LAMMPS distribution and are
described in this section.

Our group has also written and released a separate toolkit called
"Pizza.py"_pizza which provides tools for doing setup, analysis,
plotting, and visualization for LAMMPS simulations.  Pizza.py is
written in "Python"_python and is available for download from "the
Pizza.py WWW site"_pizza.

:link(pizza,http://www.cs.sandia.gov/~sjplimp/pizza.html)
:link(python,http://www.python.org)

Note that many users write their own setup or analysis tools or use
other existing codes and convert their output to a LAMMPS input format
or vice versa.  The tools listed here are included in the LAMMPS
distribution as examples of auxiliary tools.  Some of them are not
actively supported by Sandia, as they were contributed by LAMMPS
users.  If you have problems using them, we can direct you to the
authors.

The source code for each of these codes is in the tools sub-directory
of the LAMMPS distribution.  There is a Makefile (which you may need
to edit for your platform) which will build several of the tools which
reside in that directory.  Some of them are larger packages in their
own sub-directories with their own Makefiles.

"replicate"_#replicate
"restart2data"_#restart
"binary2txt"_#binary
"data2xmovie"_#data
"chain"_#chain
"micelle2d"_#micelle
"xmovie"_#xmovie
"ch2lmp"_#charmm
"msi2lmp"_#msi
"amber2lammps"_#amber
"lmp2arc"_#arc
"lmp2cfg"_#cfg
"lmp2traj"_#traj :ul

:line

replicate tool :h4,link(replicate)

The file replicate.c takes a LAMMPS data file and replicates it into a
larger system.  The syntax for running the tool is

replicate [options] < infile > outfile :pre

See the top of the replicate.c file for a discussion of the options.
This tool is used by some of the "LAMMPS benchmarks"_Section_perf.html
for creating larger systems to run scaled-size problems on multiple
processors.

:line

restart2data tool :h4,link(restart)

The file restart2data.cpp converts a binary LAMMPS restart file into
an ASCII data file.  The syntax for running the tool is

restart2data restart-file data-file :pre

This tool must be compiled on a platform that can read the binary file
created by a LAMMPS run, since binary files are not compatible across
all platforms.

Note that a text data file has less precision than a binary restart
file.  Hence, continuing a run from a converted data file will
typically not conform as closely to a previous run as will restarting
from a binary restart file.

If a "%" appears in the specified restart-file, the tool expects a set
of multiple files to exist.  See the "restart"_restart.html and
"write_restart"_write_restart.html commands for info on how such sets
of files are written by LAMMPS, and how the files are named.

:line

binary2txt tool :h4,link(binary)

The file binary2txt.cpp converts one or more binary LAMMPS dump file
into ASCII text files.  The syntax for running the tool is

binary2txt file1 file2 ... :pre

which creates file1.txt, file2.txt, etc.  This tool must be compiled
on a platform that can read the binary file created by a LAMMPS run,
since binary files are not compatible across all platforms.

:line

data2xmovie tool :h4,link(data)

The file data2xmovie.c converts a LAMMPS data file into a snapshot
suitable for visualizing with the "xmovie"_#xmovie tool, as if it had
been output with a dump command from LAMMPS itself.  The syntax for
running the tool is

data2xmovie [options] < infile > outfile :pre

See the top of the data2xmovie.c file for a discussion of the options.

:line

chain tool :h4,link(chain)

The file chain.f creates a LAMMPS data file containing bead-spring
polymer chains and/or monomer solvent atoms.  It uses a text file
containing chain definition parameters as an input.  The created
chains and solvent atoms can strongly overlap, so LAMMPS needs to run
the system initially with a "soft" pair potential to un-overlap it.
The syntax for running the tool is

chain < def.chain > data.file :pre

See the def.chain or def.chain.ab files in the tools directory for
examples of definition files.  This tool was used to create the
system for the "chain benchmark"_Section_perf.html.

:line

micelle2d tool :h4,link(micelle)

The file micelle2d.f creates a LAMMPS data file containing short lipid
chains in a monomer solution.  It uses a text file containing lipid
definition parameters as an input.  The created molecules and solvent
atoms can strongly overlap, so LAMMPS needs to run the system
initially with a "soft" pair potential to un-overlap it.  The syntax
for running the tool is

micelle2d < def.micelle2d > data.file :pre

See the def.micelle2d file in the tools directory for an example of a
definition file.  This tool was used to create the system for the
"micelle example"_Section_example.html.

:line

xmovie tool :h4,link(xmovie)

The xmovie tool is an X-based visualization package that can read
LAMMPS dump files and animate them.  It is in its own sub-directory
with the tools directory.  You may need to modify its Makefile so that
it can find the appropriate X libraries to link against.

The syntax for running xmovie is

xmovie [options] dump.file1 dump.file2 ... :pre

If you just type "xmovie" you will see a list of options.  Note that
by default, LAMMPS dump files are in scaled coordinates, so you
typically need to use the -scale option with xmovie.  When xmovie runs
it opens a visualization window and a control window.  The control
options are straightforward to use.

Xmovie was mostly written by Mike Uttormark (U Wisconsin) while he
spent a summer at Sandia.  It displays 2d projections of a 3d domain.
While simple in design, it is an amazingly fast program that can
render large numbers of atoms very quickly.  It's a useful tool for
debugging LAMMPS input and output and making sure your simulation is
doing what you think it should.  The animations on the Examples page
of the "LAMMPS WWW site"_lws were created with xmovie.

I've lost contact with Mike, so I hope he's comfortable with us
distributing his great tool!

:line

ch2lmp tool :h4,link(charmm)

The ch2lmp sub-directory contains tools for converting files
back-and-forth between the CHARMM MD code and LAMMPS. 

They are intended to make it easy to use CHARMM as a builder and as a
post-processor for LAMMPS. Using charmm2lammps.pl, you can convert an
ensemble built in CHARMM into its LAMMPS equivalent.  Using
lammps2pdb.pl you can convert LAMMPS atom dumps into pdb files.

See the README file in the ch2lmp sub-directory for more information.

These tools were created by Pieter in't Veld (pjintve@sandia.gov) and
Paul Crozier (pscrozi@sandia.gov) at Sandia.

:line

msi2lmp tool :h4,link(msi)

The msi2lmp sub-directory contains a tool for creating LAMMPS input
data files from Accelrys's Insight MD code (formerly MSI/Biosysm and
its Discover MD code).  See the README file for more information.

This tool was written by John Carpenter (Cray), Michael Peachey
(Cray), and Steve Lustig (Dupont).  John is now at the Mayo Clinic
("jec@mayo.edu"_mailto:jec@mayo.edu), but still fields questions about
the tool.

This tool may be out-of-date with respect to the current LAMMPS and
Insight versions.  Since we don't use it at Sandia, you'll need to
experiment with it yourself.

:line

amber2lmp tool :h4,link(amber)

The amber2lmp sub-directory contain two Python scripts for converting
files back-and-forth between the AMBER MD code and LAMMPS.  See the
README file in amber2lmp for more information.

These tools were written by Keir Novik while he was at Queen Mary
University of London.  Keir is no longer there and cannot support
these tools which are out-of-date with respect to the current LAMMPS
version (and maybe with respect to AMBER as well).  Since we don't use
these tools at Sandia, you'll need to experiment with them and make
necessary modifications yourself.

:line

lmp2arc tool :h4,link(arc)

The lmp2arc sub-directory contains a tool for converting LAMMPS output
files to the format for Accelrys's Insight MD code (formerly
MSI/Biosysm and its Discover MD code).  See the README file for more
information.

This tool was written by John Carpenter (Cray), Michael Peachey
(Cray), and Steve Lustig (Dupont).  John is now at the Mayo Clinic
("jec@mayo.edu"_mailto:jec@mayo.edu), but still fields questions about
the tool.

This tool was updated for the current LAMMPS C++ version by Jeff
Greathouse at Sandia (jagreat@sandia.gov).

:line

lmp2cfg tool :h4,link(cfg)

The lmp2cfg sub-directory contains a tool for converting LAMMPS output
files into a series of *.cfg files which can be read into the
"AtomEye"_http://164.107.79.177/Archive/Graphics/A visualizer.  See
the README file for more information.

This tool was written by Ara Kooser at Sandia (askoose@sandia.gov).

:line

lmp2traj tool :h4,link(traj)

The lmp2traj sub-directory contains a tool for converting LAMMPS output
files into 3 analysis files.  One file can be used to create contour
maps of the atom positions over the course of the simulation. The
other two files provide density profiles and dipole moments.  See the
README file for more information.

This tool was written by Ara Kooser at Sandia (askoose@sandia.gov).
