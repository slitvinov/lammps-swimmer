"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

compute property/local command :h3

[Syntax:]

compute ID group-ID property/local input1 input2 ... :pre

ID, group-ID are documented in "compute"_compute.html command :ulb,l
property/local = style name of this compute command :l
input = one or more attributes :l
  possible attributes = batom1 batom2 btype
                        aatom1 aatom2 aatom3 atype
                        datom1 datom2 datom3 dtype
                        iatom1 iatom2 iatom3 itype :pre

     batom1, batom2 = IDs of 2 atoms in each bond
     btype = bond type of each bond
     aatom1, aatom2, aatom3 = IDs of 3 atoms in each angle
     atype = angle type of each angle
     datom1, datom2, datom3, datom4 = IDs of 4 atoms in each dihedral
     dtype = dihedral type of each dihedral
     iatom1, iatom2, iatom3, iatom4 = IDs of 4 atoms in each improper
     itype = improper type of each improper :pre
:ule

[Examples:]

compute 1 all property/local btype batom1 batom2
compute 1 all property/local atype aatom2 :pre

[Description:]

Define a computation that simply stores the specified attributes as
local vectors or as columns of a local array.  See the
"compute"_compute.html command for a discussion of what local
quantities mean, and how they differ from per-atom quantities.  Thus
if the input attributes are for bond information, the local vector or
array that is generated, when aggregated across all processors, will
contain information about all bonds in the system.

If multiple input attributes are specified then they must all generate
the same amount of information, so that the resulting local array has
the same number of rows for each column.  This means that only bond
attributes can be specified together, or angle attributes, etc.  Bond
and angle attributes can not be mixed in the same compute
property/local command.

The local data is generated by looping over all the atoms owned on a
processor and extracting bond, angle, etc info.  For bonds, info about
an individual bond will only be included if both atoms in the bond are
in the specified compute group.  Likewise for angles, dihedrals, etc.

Note that as atoms migrate from processor to processor, there will be
no consistent ordering of the entries within the local vector or array
from one timestep to the next.  The only consistency that is
guaranteed is that the ordering on a particular timestep will be the
same for local info generated by other compute commands.  For example,
output from the "compute bond/local"_compute_bond_local.html command
can be combined with bond atom indices from this command and output by
the "dump local"_dump.html command in a consistent way.

The {batom1} and {batom2} attributes refer the atom IDs of the 2 atoms
in each "bond"_bond_style.html.  The {btype} attribute refers to the
type of the bond, from 1 to Nbtypes = # of bond types.  The number of
bond types is defined in the data file read by the
"read_data"_read_data.html command.  The attributes that start with
"a", "d", "i", refer to similar values for "angles"_angle_style.html,
"dihedrals"_dihedral_style.html, and "impropers"_improper_style.html.

[Output info:]

This compute calculates a local vector or local array depending on the
number of input values.  If a single input is specified, a local
vector is produced.  If two or more inputs are specified, a local
array is produced where the number of columns = the number of inputs.
The vector or array can be accessed by any command that uses local
values from a compute as input.  See "this
section"_Section_howto.html#4_15 for an overview of LAMMPS output
options.

[Restrictions:] none

[Related commands:]

"dump local"_dump.html, "compute reduce"_compute_reduce.html

[Default:] none
