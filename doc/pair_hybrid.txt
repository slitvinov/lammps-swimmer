"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

pair_style hybrid command :h3

[Syntax:]

pair_style hybrid style1 style2 ... :pre

style1,style2 = list of one or more pair styles :ul

[Examples:]

pair_style hybrid lj/charmm/coul/long 10.0 eam
pair_coeff 1*2 1*2 eam niu3
pair_coeff 3 3 lj/cut/coul/cut 1.0 1.0
pair_coeff 1*2 3 lj/cut 0.5 1.2 :pre

[Description:]

The {hybrid} style enables the use of multiple pair styles in one
simulation.  A pair style can be assigned to each pair of atom types
via the "pair_coeff"_pair_coeff.html command.

For example, a metal on a LJ surface could be computed where the metal
atoms interact with each other via a {eam} potential, the surface
atoms interact with each other via a {lj/cut} potential, and the
metal/surface interaction is also via a {lj/cut} potential.

All pair styles that will be used must be listed in the pair_style
hybrid command (in any order).  The name of each sub-style is followed
by its arguments, as illustrated in the example above.

In the pair_coeff command, the first coefficient sets the pair style
and the remaining coefficients are those appropriate to that style.
For example, consider a simulation with 3 atom types: types 1 and 2
are Ni atoms, type 3 are LJ atoms with charges.  The following
commands would set up a hybrid simulation:

pair_style hybrid eam/alloy lj/cut/coul/cut 10.0 lj/cut 8.0
pair_coeff * * eam/alloy nialhjea 1 1 0
pair_coeff 3 3 lj/cut/coul/cut 1.0 1.0
pair_coeff 1*2 3 lj/cut 0.8 1.1 :pre

Note that as with any pair_style, coeffs must be defined for all I,J
interactions.  If the sub-style allows for mixing (see the
"pair_modify"_pair_modify.html command), then I,J interactions between
atom types which both are assigned to that sub-style do not need to be
specified.  I.e. if atom types 1 and 2 are both computed with {lj/cut}
and coeffs for 1,1 and 2,2 interactions are specified, then coeffs for
1,2 interactions will be generated automatically via mixing.

If the pair_coeff command for a sub-style requires the use of * * as
atom type arguments (e.g. the {eam/alloy} example above), then it will
also include trailing arguments which map atom types to elements in
the potential.  These mapping arguments should be specified as 0 if
the sub-style is not being applied to certain atom types.

Note that you may also need to use an "atom_style"_atom_style.html
hybrid command in your input script, if atoms in the simulation will
have attributes from several atom styles, due to using multiple pair
potentials.

[Restrictions:]

When using a long-range Coulomic solver (via the
"kspace_style"_kspace_style command) with pair_style hybrid, one or
more sub-styles will be of the "long" variety.
E.g. {lj/cut/coul/long} or {buck/coul/long}.  It is OK to have more
than one sub-style with a "long" component, but you must insure that
the short-range Coulombic cutoff used by each of these pair styles is
consistent.  Else the long-range Coulombic solve will be inconsistent.

A pair style of {none} can be specified as an argument to pair_style
hybrid and the corresponding pair_coeff commands, if you desire to
turn off pairwise interactions between certain pairs of atom types.

The hybrid style cannot include any of the {granular} styles in its
list of styles to use.

If you use multiple {coul/long} pair styles along with a "kspace
style"_kspace_style.html, then you should make sure the pairwise
Coulombic cutoff is the same for all the pair styles.

[Related commands:]

"pair_coeff"_pair_coeff.html

[Default:] none
